on:
  push:
    branches:
      - debian/master
  pull_request: {}

jobs:
  sid:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # FIXME massive hack, just trying to see if this works
      - name: build and test
        run: |
          set -ex
          git fetch --all
          git branch pristine-tar origin/pristine-tar
          git branch upstream/latest origin/upstream/latest
          CONTAINER_ID="$(docker run --rm --privileged --detach -e DEBIAN_FRONTEND=noninteractive -v "$GITHUB_WORKSPACE:/github/workspace" --workdir=/github/workspace debian:unstable-slim tail -f /dev/null)"
          DEBARCH="$(docker exec "$CONTAINER_ID" dpkg --print-architecture)"
          docker exec "$CONTAINER_ID" apt-get update
          docker exec "$CONTAINER_ID" apt-get install -y git-buildpackage build-essential
          docker exec "$CONTAINER_ID" apt-get build-dep -y .
          docker exec "$CONTAINER_ID" gbp buildpackage --git-pristine-tar --git-no-sign-tags --git-upstream-tree=BRANCH --git-ignore-branch \
            --git-postbuild='lintian -I $GBP_CHANGES_FILE'
          # FIXME autopkgtest-schroot requires ephemeral schroot sessions. Set a "union-type" or use a tarball schroot
          # autopkgtest $GBP_CHANGES_FILE -- schroot unstable-${DEBARCH}-sbuild; [ $? -eq 0 -o $? -eq 8 ]'
          docker kill "$CONTAINER_ID"

